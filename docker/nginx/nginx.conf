
events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  text/html;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;
  gzip on;

  upstream php {
    server ftxampp_phpfpm:9000;
  }

server {
  listen 80;
  server_name _;
  root /var/www/html;              # htdocs
  index index.php index.html;

  # --- Startseite -> Dashboard (SPA bevorzugt, dann PHP) ---
  location = / {
    try_files /_dashboard/dist/index.html /_dashboard/index.php /index.php =404;
  }

  # --- Dashboard API: nur echte PHP-Dateien erlauben ---
  location ^~ /_dashboard/api/ {
    # Nur Dateien unter /_dashboard/api/ ausführen
    try_files $uri =404;

    location ~ \.php$ {
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_pass php;
      fastcgi_read_timeout 60s;
    }

    # Alles Nicht-PHP verbieten
    return 404;
  }

  # --- Dashboard Assets (gebautes Vue) ---
  location ^~ /_dashboard/assets/ {
    alias /var/www/html/_dashboard/dist/assets/;
    try_files $uri =404;
    expires 7d;
    add_header Cache-Control "public, max-age=604800, immutable";
  }

  # --- Dashboard (SPA/PHP) ---
  location ^~ /_dashboard/ {
    # Reihenfolge: echte Datei → dist → SPA-Fallback → PHP-Fallback
    try_files
      $uri
      $uri/
      /_dashboard/dist$uri
      /_dashboard/dist$uri/
      /_dashboard/dist/index.html
      /_dashboard/index.php;
      
    # PHP im Dashboard
    location ~ \.php$ {
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_pass php;
    }
  }

  # --- PHP-Handler (global) ---
  location ~ \.php$ {
    try_files $uri =404;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_index index.php;
    fastcgi_pass php;
  }

  # --- Statisches (Schnellpfad) ---
  location ~* \.(?:css|js|mjs|png|jpg|jpeg|gif|svg|ico|webp|woff2?|ttf|eot)$ {
    expires 7d;
    add_header Cache-Control "public, max-age=604800, immutable";
    try_files $uri =404;
  }

  # --- Generisches Projekt-Routing ---
  # /<proj>/... → zuerst Symfony public/, dann Vue dist/, zuletzt plain
  location / {
    try_files $uri $uri/ @project_router;
  }

  location @project_router {
    # $1 = Projektname, $2 = Restpfad (kann leer sein)
    if ($uri ~ "^/([^/]+)(/.*)?$") { set $proj $1; set $rest $2; }

    try_files
      /$proj/public$rest
      /$proj/public/index.php$is_args$args
      /$proj/dist$rest
      /$proj/dist/index.html
      /$proj$rest
      /$proj/index.php$is_args$args
      =404;
  }

  # Schutz für dotfiles
  location ~ /\.(?!well-known) {
    deny all;
  }
}
}